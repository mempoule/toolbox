- name: nginx - Base - Install base package(s)
  apt:
    pkg:
      - nginx
  become: true

- name: nginx - Firewall - Port 80
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: '80'
    jump: ACCEPT
    action: insert
    rule_num: "1"
  become: true
  when: fw_nohttp is not defined or (fw_nohttp is defined and not fw_nohttp)

- name: nginx - Firewall - Port 443
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: '443'
    jump: ACCEPT
    action: insert
    rule_num: "1"
  become: true
  when: fw_nohttps is not defined or (fw_nohttps is defined and not fw_nohttps)

- name: nginx - Firewall - Cloudflare - Port 80
  iptables:
    chain: INPUT
    protocol: tcp
    source: "{{ item }}"
    destination_port: '80'
    jump: ACCEPT
    action: insert
    rule_num: "1"
  with_items: "{{ cloudflarev4.splitlines() }}"
  vars:
    cloudflarev4: "{{ lookup('file', 'vars/cloudflarev4.cfg') }}"
  become: true
  when: fw_cloudflare is defined and fw_cloudflare

- name: nginx - Firewall - Cloudflare - Port 443
  iptables:
    chain: INPUT
    protocol: tcp
    source: "{{ item }}"
    destination_port: '443'
    jump: ACCEPT
    action: insert
    rule_num: "1"
  with_items: "{{ cloudflarev4.splitlines() }}"
  vars:
    cloudflarev4: "{{ lookup('file', 'vars/cloudflarev4.cfg') }}"
  become: true
  when: fw_cloudflare is defined and fw_cloudflare

- name: nginx - Iptables - Save rules
  community.general.iptables_state:
    ip_version: ipv4
    table: filter
    state: saved
    path: /etc/iptables/rules.v4
  become: true

- name: nginx - wwwfiles - Cleaning base directory - Get list - var
  find:
    paths: /var/www/html
    patterns: "*.html"
  register: wwwfiles_to_delete

- name: nginx - wwwfiles - Cleaning base directory - Delete it - var
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ wwwfiles_to_delete.files }}"
  become: true

- name: nginx - wwwfiles - Cleaning base directory - Get list - usr
  find:
    paths: /usr/share/nginx/html
    patterns: "*.html"
  register: usrfiles_to_delete

- name: nginx - wwwfiles - Cleaning base directory - Delete it - usr
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ usrfiles_to_delete.files }}"
  become: true

- name: nginx - nginxTweaks - remove default virtualhost - sa
  file:
    path: "/etc/nginx/sites-available/default"
    state: absent
  become: true

- name: nginx - nginxTweaks - remove default virtualhost - se
  file:
    path: "/etc/nginx/sites-enabled/default"
    state: absent
  become: true

- name: nginx - nginxTweaks - Server tokens off
  lineinfile:
    path: /etc/nginx/nginx.conf
    regexp: '# server_tokens off;'
    line: "server_tokens off;"
  become: true

- name: nginx - nginxTweaks - error_codes default
  blockinfile:
    path: "/etc/nginx/errors_codes.conf"
    block: |
            error_page 400 = @400;
            location @400 { return 400 '{"status":400,"message":"Bad request"}\n'; }
            error_page 401 = @401;
            location @401 { return 401 '{"status":401,"message":"Unauthorized"}\n'; }
            error_page 403 = @403;
            location @403 { return 403 '{"status":403,"message":"Forbidden"}\n'; }
            error_page 404 = @404;
            location @404 { return 404 '{"status":404,"message":"Resource not found"}\n'; }
            error_page 405 = @405;
            location @405 { return 405 '{"status":405,"message":"Method not allowed"}\n'; }
            error_page 408 = @408;
            location @408 { return 408 '{"status":408,"message":"Request timeout"}\n'; }
            error_page 413 = @413;
            location @413 { return 413 '{"status":413,"message":"Payload too large"}\n'; }
            error_page 414 = @414;
            location @414 { return 414 '{"status":414,"message":"Request URI too large"}\n'; }
            error_page 415 = @415;
            location @415 { return 415 '{"status":415,"message":"Unsupported media type"}\n'; }
            error_page 426 = @426;
            location @426 { return 426 '{"status":426,"message":"HTTP request was sent to HTTPS port"}\n'; }
            error_page 429 = @429;
            location @429 { return 429 '{"status":429,"message":"API rate limit exceeded"}\n'; }
            error_page 495 = @495;
            location @495 { return 495 '{"status":495,"message":"Client certificate authentication error"}\n'; }
            error_page 496 = @496;
            location @496 { return 496 '{"status":496,"message":"Client certificate not presented"}\n'; }
            error_page 497 = @497;
            location @497 { return 497 '{"status":497,"message":"HTTP request was sent to mutual TLS port"}\n'; }
            error_page 500 = @500;
            location @500 { return 500 '{"status":500,"message":"Server error"}\n'; }
            error_page 501 = @501;
            location @501 { return 501 '{"status":501,"message":"Not implemented"}\n'; }
            error_page 502 = @502;
            location @502 { return 502 '{"status":502,"message":"Bad gateway"}\n'; }
            error_page 503 = @503;
            location @503 { return 503 '{"status":503,"message":"Service Unavailable"}\n'; }
    create: yes
  become: true

- name: nginx - nginxTweaks - Adding user {{ ruser }} to www-data group
  user:
    name: "{{ ruser }}"
    groups: www-data
    append: true

- name: nginx - Restart daemon
  service:
    name: nginx
    enabled: yes
    state: restarted
  become: true
