#!/bin/bash

########################################################################
#     Priviledged usercheck
########################################################################

if [[ $EUID -ne 0 ]] && [[ -z ${SUDO_USER// } ]]
then
  echo "$TIMESTAMP - Not priviledged user, aborting."
  exit
fi


########################################################################
#     vars
########################################################################

TIMESTAMP=$(date "+%Y%m%d%H%M%S")
LOGFILE="/var/log/mempoule-totp-$TIMESTAMP.log"
TIMESTAMP=$(date "+%Y%m%d%H%M%S")

users_activated=0
users_already_set=0
users_activated_nomail=0
domains_exist=0

total_users=$(grep -c '^user:' /etc/pve/user.cfg)
mail_users=$(grep '^user:.*.:.*.:.*.:.*.:.*.@.*.\..*.:' /etc/pve/user.cfg)
admin_list=$(/sbin/pveum acl list | grep '\/ .*.Administrator\|PVEAdmin\|PVESysAdmin' | cut -d '@' -f1 | rev | cut -d ' ' -f1 | rev)
admin_with_mail=0


########################################################################
#     forcemode
########################################################################

echo "-------------------------------------------------------------------------------" | tee $LOGFILE

if [[ $1 == "force" ]]
then
  echo "$TIMESTAMP - FORCEMODE : ON" | tee $LOGFILE
else
  echo "$TIMESTAMP - FORCEMODE : OFF" | tee $LOGFILE
fi

echo "-------------------------------------------------------------------------------" | tee $LOGFILE

########################################################################
#    One mail minimum to avoid locking out
########################################################################

if [[ ${mail_users} =~ root ]]
then
  admin_with_mail=$((admin_with_mail+1))
else
  while IFS= read -r line; do
    if [[ "${mail_users}" =~ "${line}" ]]
    then
      admin_with_mail=$((admin_with_mail+1))
    fi
  done < <(printf '%s\n' "${admin_list}")
fi

if ! [[ ${admin_with_mail} -gt 0 ]]
then
  exit
else
  echo "$TIMESTAMP - At least one admin has got a mail" | tee $LOGFILE
fi


########################################################################
#    TOTP status check
########################################################################

if [[ -f /etc/pve/domains.cfg ]]
then
  echo "$TIMESTAMP - Domains.cfg already exists" | tee $LOGFILE
  domains_exist=1
  if [[ "$(grep -c 'tfa type=oath' /etc/pve/domains.cfg)" -eq 1 ]]
  then
    echo "$TIMESTAMP - TOTP already activated" | tee $LOGFILE
  fi
else
  echo "$TIMESTAMP - Domains.cfg not found, autoconf of mutt and msmtp" | tee $LOGFILE
  domains_exist=0
fi

if  [[ ! -f /etc/Muttrc ]] || [[ ! -f /etc/msmtprc ]]
then
  read -p "Please enter smtp host [ex5.mail.ovh.net] :" smtp_host
  smtp_host=${smtp_host:-ex5.mail.ovh.net}
  read -p "Please enter smtp username [noreply@mempoule.fr] :" smtp_username
  smtp_username=${smtp_username:-noreply@mempoule.fr}
  echo "Please enter smtp password"
  read -sr smtp_password
  if  [[ ${smtp_password} =~ " " ]] | [[ ${smtp_password} == "" ]]
  then
    echo "Must provide a valid smtp_password, exiting"
    exit
  fi

  {
    echo 'set sendmail="/usr/bin/msmtp"'
    echo 'set use_from=yes'
    echo "set realname=\"${smtp_username}\""
    echo "set from=\"${smtp_username}\""
    echo 'set envelope_from=yes'
    echo 'set content_type=text/html'
    echo 'alternative_order text/html text/plain text'
  } > /etc/Muttrc
  chmod 640 /etc/Muttrc
  {
    echo 'account default'
    echo "host ${smtp_host}"
    echo "from ${smtp_username}"
    echo 'auto_from off'
    echo 'add_missing_from_header on'
    echo 'auth on'
    echo 'port 587'
    echo "user ${smtp_username}"
    echo "password ${smtp_password}"
    echo 'logfile ~/.msmtp.log'
    echo 'tls on'
    echo 'tls_starttls on'
  } > /etc/msmtprc
  chmod 640 /etc/msmtprc
fi


########################################################################
#    /etc/pve/user.cfg parsing
########################################################################

send_totp() {
  username=$(echo $1 | cut -d ';' -f1)
  first_name=$(echo $1 | cut -d ';' -f2)
  last_name=$(echo $1 | cut -d ';' -f3)
  mail_address=$(echo $1 | cut -d ';' -f4)
  cur_totp=$(echo $1 | cut -d ';' -f5)
  host_name=$(hostname)
  MYTMPDIR="$(mktemp -d)"
  MYTMPFILE="${MYTMPDIR}/qr.png"
  trap 'rm -rf $MYTMPDIR 2>/dev/null' EXIT
  qrencode -o ${MYTMPFILE} "otpauth://totp/PVE:${username}@${host_name}?secret=\${cur_totp}"
  echo -e "<p style=\"font-family: Calibri;font-size: 16px\">Hello ${first_name} ${last_name}<br><br>2FA has just been activated or may have been force-resent by your Administrator.<br><br>Host : ${host_name}<br>Secret key : ${cur_totp}<br><br>For convience, you will find the matching QR code attached to this mail<br><br><p style=\"color:#FF0000;font-size:18px;\">Please delete this mail as soon as you have imported/saved it securely : You are the SOLE responsible of its security.</p>" | mutt -s "${host_name}:${username} - TOTP" -a ${MYTMPFILE} -- ${mail_address}
  echo "$TIMESTAMP - ${username} mail sent" | tee $LOGFILE
  rm -rf $MYTMPFILE 2>/dev/null
}

while IFS= read -r line; do
  if [[ ${line} =~ ^user: ]]
  then
    username=$(echo "${line}" | cut -d ":" -f2 | cut -d "@" -f1)
    first_name=$(echo "${line}" | cut -d ":" -f6)
    last_name=$(echo "${line}" | cut -d ":" -f5)
    mail_address=$(echo "${line}" | cut -d ":" -f7)
    cur_totp=$(echo "${line}" | cut -d ":" -f9)
    if [ -z "${cur_totp}" ]
    then
      cur_totp=$(oathkeygen)
      new_line=$(sed "s/:/:${cur_totp}/8" <<< $line)
      sed -i "/${line}/c${new_line}" /etc/pve/user.cfg
      if [[ -z "${mail_address}" ]]
      then
        echo "$TIMESTAMP - ${username} has no mail set" | tee $LOGFILE
        users_activated_nomail=$((users_activated_nomail+1))
      else
        echo "$TIMESTAMP - ${username} mail sending..." | tee $LOGFILE
        send_totp "${username};${first_name};${last_name};${mail_address};${cur_totp}"
      fi
      users_activated=$((users_activated+1))
    else
      users_already_set=$(( users_already_set+1 ))
      echo "$TIMESTAMP - ${username} already have a TOTP key" | tee $LOGFILE
      if [[ $1 == "force" ]]
      then
        if ! [[ -z ${mail_address} ]]
        then
          send_totp "${username};${first_name};${last_name};${mail_address};${cur_totp}"
        fi
      fi
    fi
  fi
done < "/etc/pve/user.cfg"


########################################################################
#    TOTP activation
########################################################################

if [[ ${users_activated} -gt 0 ]]
then
  {
    echo "pve: pve"
    echo -e "        comment Proxmox VE authentication server\n"
    echo "pam: pam"
    echo "        comment Linux PAM standard authentication"
    echo "        default 0"
    echo "        tfa type=oath"
  } > /etc/pve/domains.cfg
fi


echo "-------------------------------------------------------------------------------"
echo "$TIMESTAMP - Total Users activated : ${users_activated}"
echo "$TIMESTAMP - Total Users activated without mail : ${users_activated_nomail}"
echo "$TIMESTAMP - Total Users already set : ${users_already_set}"
